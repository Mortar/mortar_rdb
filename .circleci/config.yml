version: 2.1

#orbs:
#  python: cjw296/python-ci@1.0.2
#
orbs:
  python:
    commands:
      run-with-coverage:
        parameters:
          command:
            type: string
        steps:
          - run:
              name: "Run Tests"
              command: |
                python --version
                mkdir -p coverage_output
                export COVERAGE_FILE=coverage_output/.coverage.$CIRCLE_BUILD_NUM
                << parameters.command >>
          - persist_to_workspace:
              root: coverage_output
              paths:
                - .coverage.*
    jobs:
      pip-run-tests:
        parameters:
          command:
            type: string
            default: pytest --cov
          prepare:
            type: steps
            default: []
          executor:
            type: executor
        executor: << parameters.executor >>
        steps:
          - checkout
          - run:
              name: "Install Project"
              command: sudo pip install -e .[test]
          - steps: << parameters.prepare >>
          - run-with-coverage:
              command: << parameters.command >>

executors:
  sqlite:
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
        environment:
          DB_URL: ""
  postgres:
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
        environment:
          DB_URL: postgresql://postgres@localhost/circle_test
      - image: circleci/postgres:11.2-alpine-ram
  mysql:
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
        environment:
          DB_URL: mysql+pymysql://root@localhost/circle_test
      - image: circleci/mysql:8.0.3-ram

#jobs:
#
#  python37-postgres:
#    docker:
#      - image: circleci/python:3.7
#        environment:
#          DB_URL: postgresql://postgres@localhost/circle_test
#      - image: circleci/postgres:11.2-alpine-ram
#    steps:
#      - checkout
#      - run:
#          name: "Install Project"
#          command: |
#            sudo pip install -e .[test]
#            sudo pip install psycopg2
#      - run:
#          name: "Run Tests"
#          command: coverage run --source mortar_rdb -m pytest
#
#  python37-mysql:
#    docker:
#      - image: circleci/python:3.7
#        environment:
#          DB_URL: mysql+pymysql://root@localhost/circle_test
#      - image: circleci/mysql:8.0.3-ram
#    steps:
#      - checkout
#      - run:
#          name: "Install Project"
#          command: |
#            sudo pip install -e .[test]
#            sudo pip install PyMySQL
#      - run:
#          name: "Run Tests"
#          command: coverage run --source mortar_rdb -m pytest

common: &common
  jobs:
    - python/pip-run-tests:
        name: python37-sqlite
        executor:
          name: sqlite
          image: circleci/python:3.7
        command: coverage run --source mortar_rdb -m pytest

    - python/pip-run-tests:
        name: python37-postgres
        executor:
          name: postgres
          image: circleci/python:3.7
        prepare:
          - run: "sudo pip install psycopg2"
        command: coverage run --source mortar_rdb -m pytest

    - python/pip-run-tests:
        name: python37-mysql
        executor:
          name: mysql
          image: circleci/python:3.7
        prepare:
          - run: "sudo pip install PyMySQL"
        command: coverage run --source mortar_rdb -m pytest

#    - python37-postgres
#    - python37-mysql

#    - python/poetry-run-tests:
#        name: python27
#        image: circleci/python:2.7
#    - python/poetry-run-tests:
#        name: python36
#        image: circleci/python:3.6
#    - python/poetry-run-tests:
#        name: python37
#        image: circleci/python:3.7
#
#    - python/coverage:
#        name: coverage
#        requires:
#          - python27
#          - python36
#          - python37
#
#    - python/release:
#        name: release
#        requires:
#          - coverage
#        filters:
#          branches:
#            only: master

workflows:
  push:
    <<: *common
#  periodic:
#    <<: *common
#    triggers:
#      - schedule:
#          cron: "0 0 * * 4"
#          filters:
#            branches:
#              only: master
